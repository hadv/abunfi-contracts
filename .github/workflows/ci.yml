name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FOUNDRY_PROFILE: ci

jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Show Forge version
        run: |
          forge --version
          anvil --version

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv --gas-report
        id: test

      - name: Run Forge fmt check
        run: |
          forge fmt --check
        id: fmt

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run coverage
        run: forge coverage --report summary --report lcov

      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          coverage-files: lcov.info
          minimum-coverage: 80
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ./

  slither-analyze:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Slither
        uses: crytic/slither-action@v0.4.1
        id: slither
        with:
          node-version: 18
          fail-on: none
          sarif: results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}

  gas-report:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run tests with gas report
        run: forge test --gas-report > gas-report.txt

      - name: Comment gas report
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const gasReport = fs.readFileSync('gas-report.txt', 'utf8');
            
            const body = `## Gas Report
            
            \`\`\`
            ${gasReport}
            \`\`\`
            `;
            
            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.body.includes('## Gas Report')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check package.json scripts
        run: |
          if npm run --silent | grep -q "lint"; then
            echo "Running lint script"
            npm run lint
          else
            echo "No lint script found, skipping"
          fi

  security-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Check for known vulnerabilities
        run: |
          # Check for common security issues in Solidity code
          echo "Checking for common security patterns..."
          
          # Check for unsafe external calls
          if grep -r "call(" src/ --include="*.sol"; then
            echo "⚠️  Found low-level calls - please review for reentrancy"
          fi
          
          # Check for delegatecall usage
          if grep -r "delegatecall" src/ --include="*.sol"; then
            echo "⚠️  Found delegatecall usage - please review for security"
          fi
          
          # Check for assembly usage
          if grep -r "assembly" src/ --include="*.sol"; then
            echo "⚠️  Found assembly usage - please review carefully"
          fi

  build-success:
    runs-on: ubuntu-latest
    needs: [check, coverage, slither-analyze, gas-report, lint, security-check]
    if: always()
    steps:
      - name: Check all jobs
        uses: re-actors/alls-green@release/v1
        with:
          allowed-failures: slither-analyze, security-check
          jobs: ${{ toJSON(needs) }}
