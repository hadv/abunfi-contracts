[profile.fs_permissions]
read = ["./deployments", "./broadcast"]
write = ["./deployments", "./broadcast"]

[profile.default]
src = "src"
out = "out"
libs = ["lib"]
solc_version = "0.8.20"
optimizer = true
optimizer_runs = 200
via_ir = true
# Cache settings for faster builds
cache = true
cache_path = "cache"
# Reduce optimizer runs for faster compilation
# optimizer_runs = 200 is already reasonable

[profile.fast]
src = "src"
out = "out"
libs = ["lib"]
solc_version = "0.8.20"
optimizer = true
optimizer_runs = 1  # Minimal optimization for faster builds
via_ir = true

# Remappings for dependencies
remappings = [
    "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
    "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
    "forge-std/=lib/forge-std/src/"
]

# RPC endpoints
[rpc_endpoints]
mainnet = "${ETHEREUM_RPC_URL}"
arbitrum = "${ARBITRUM_RPC_URL}"
polygon = "${POLYGON_RPC_URL}"
sepolia = "${SEPOLIA_RPC_URL}"
arbitrum_goerli = "${ARBITRUM_GOERLI_RPC_URL}"
mumbai = "${MUMBAI_RPC_URL}"

# Etherscan API keys for verification
[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
arbitrum = { key = "${ARBISCAN_API_KEY}" }
polygon = { key = "${POLYGONSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }
arbitrum_goerli = { key = "${ARBISCAN_API_KEY}" }
mumbai = { key = "${POLYGONSCAN_API_KEY}" }

# Formatter configuration
[fmt]
# Exclude library files from formatting
exclude = ["lib/**/*.sol"]

# Test configuration
[profile.default.fuzz]
runs = 1000

[profile.ci]
# Optimized for CI speed while avoiding stack too deep errors
optimizer = true
optimizer_runs = 200
via_ir = true  # Keep IR enabled to avoid stack too deep errors
fuzz = { runs = 100 }  # Reduced for faster CI
invariant = { runs = 50 }  # Reduced for faster CI
# Cache settings
cache = true
cache_path = "cache"
force = false


